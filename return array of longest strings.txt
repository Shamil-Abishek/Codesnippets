//using java 

Given an array of strings, return another array containing all of its longest strings.

Example

For inputArray = ["aba", "aa", "ad", "vcd", "aba"], the output should be
allLongestStrings(inputArray) = ["aba", "vcd", "aba"].



Code: -
String[] allLongestStrings(String[] inputArray) {
    String[] answer = new String[10];
    int lenths=0;
    int k=-1;
      List<String> list = new ArrayList<String>();
    if(inputArray.length == 1)
    {
        return inputArray;
    }
    System.out.println("The size of the array is "+inputArray.length);
    for(int i=0;i<=inputArray.length-1;i++)
    {
    System.out.println("The length of the string "+inputArray[i]+"at the "+i+"th position "+"is "+inputArray[i].length());
    }
    for(int i=0;i<=inputArray.length-1;i++)
    {
        if(inputArray[i].length() > lenths)
        {
            lenths = inputArray[i].length();
        }
    }
    for(int j=0;j<inputArray.length;j++)
    {
        if(inputArray[j].length() == lenths)
        {
            answer[++k]= inputArray[j];
        }
    }
    
  for (String s : answer)
{
       if(s!=null && s.length()>0)
       {
            list.add(s);
       }
    }
        answer = list.toArray(new String[list.size()]);
    return answer;
}
